/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * SearchRequest
 */

public class SearchRequest {
  @JsonProperty("applicationIds")
  private List<UUID> applicationIds = null;

  @JsonProperty("end")
  private Long end = null;

  @JsonProperty("page")
  private Integer page = null;

  @JsonProperty("pageSize")
  private Integer pageSize = null;

  @JsonProperty("query")
  private String query = null;

  @JsonProperty("start")
  private Long start = null;

  /**
   * Gets or Sets timestampField
   */
  public enum TimestampFieldEnum {
    RECEIVED("RECEIVED"),
    
    ORIGINAL("ORIGINAL");

    private String value;

    TimestampFieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimestampFieldEnum fromValue(String text) {
      for (TimestampFieldEnum b : TimestampFieldEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("timestampField")
  private TimestampFieldEnum timestampField = null;

  public SearchRequest applicationIds(List<UUID> applicationIds) {
    this.applicationIds = applicationIds;
    return this;
  }

  public SearchRequest addApplicationIdsItem(UUID applicationIdsItem) {
    if (this.applicationIds == null) {
      this.applicationIds = new ArrayList<>();
    }
    this.applicationIds.add(applicationIdsItem);
    return this;
  }

   /**
   * Get applicationIds
   * @return applicationIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getApplicationIds() {
    return applicationIds;
  }

  public void setApplicationIds(List<UUID> applicationIds) {
    this.applicationIds = applicationIds;
  }

  public SearchRequest end(Long end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @ApiModelProperty(value = "")
  public Long getEnd() {
    return end;
  }

  public void setEnd(Long end) {
    this.end = end;
  }

  public SearchRequest page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @ApiModelProperty(value = "")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public SearchRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public SearchRequest query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @ApiModelProperty(value = "")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public SearchRequest start(Long start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(value = "")
  public Long getStart() {
    return start;
  }

  public void setStart(Long start) {
    this.start = start;
  }

  public SearchRequest timestampField(TimestampFieldEnum timestampField) {
    this.timestampField = timestampField;
    return this;
  }

   /**
   * Get timestampField
   * @return timestampField
  **/
  @ApiModelProperty(value = "")
  public TimestampFieldEnum getTimestampField() {
    return timestampField;
  }

  public void setTimestampField(TimestampFieldEnum timestampField) {
    this.timestampField = timestampField;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRequest searchRequest = (SearchRequest) o;
    return Objects.equals(this.applicationIds, searchRequest.applicationIds) &&
        Objects.equals(this.end, searchRequest.end) &&
        Objects.equals(this.page, searchRequest.page) &&
        Objects.equals(this.pageSize, searchRequest.pageSize) &&
        Objects.equals(this.query, searchRequest.query) &&
        Objects.equals(this.start, searchRequest.start) &&
        Objects.equals(this.timestampField, searchRequest.timestampField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationIds, end, page, pageSize, query, start, timestampField);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRequest {\n");
    
    sb.append("    applicationIds: ").append(toIndentedString(applicationIds)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    timestampField: ").append(toIndentedString(timestampField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

