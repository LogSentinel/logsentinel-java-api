/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * FlowEntry
 */

public class FlowEntry {
  @JsonProperty("destinationIp")
  private String destinationIp = null;

  @JsonProperty("destinationPort")
  private Integer destinationPort = null;

  /**
   * Gets or Sets flowType
   */
  public enum FlowTypeEnum {
    NETFLOW("NETFLOW"),
    
    SFLOW("SFLOW"),
    
    JFLOW("JFLOW");

    private String value;

    FlowTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FlowTypeEnum fromValue(String text) {
      for (FlowTypeEnum b : FlowTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("flowType")
  private FlowTypeEnum flowType = null;

  @JsonProperty("numericParams")
  private Map<String, Double> numericParams = null;

  @JsonProperty("originalEventTimestamp")
  private Long originalEventTimestamp = null;

  @JsonProperty("params")
  private Map<String, String> params = null;

  @JsonProperty("protocol")
  private String protocol = null;

  @JsonProperty("sourceIp")
  private String sourceIp = null;

  @JsonProperty("sourcePort")
  private Integer sourcePort = null;

  public FlowEntry destinationIp(String destinationIp) {
    this.destinationIp = destinationIp;
    return this;
  }

   /**
   * Get destinationIp
   * @return destinationIp
  **/
  @ApiModelProperty(value = "")
  public String getDestinationIp() {
    return destinationIp;
  }

  public void setDestinationIp(String destinationIp) {
    this.destinationIp = destinationIp;
  }

  public FlowEntry destinationPort(Integer destinationPort) {
    this.destinationPort = destinationPort;
    return this;
  }

   /**
   * Get destinationPort
   * @return destinationPort
  **/
  @ApiModelProperty(value = "")
  public Integer getDestinationPort() {
    return destinationPort;
  }

  public void setDestinationPort(Integer destinationPort) {
    this.destinationPort = destinationPort;
  }

  public FlowEntry flowType(FlowTypeEnum flowType) {
    this.flowType = flowType;
    return this;
  }

   /**
   * Get flowType
   * @return flowType
  **/
  @ApiModelProperty(value = "")
  public FlowTypeEnum getFlowType() {
    return flowType;
  }

  public void setFlowType(FlowTypeEnum flowType) {
    this.flowType = flowType;
  }

  public FlowEntry numericParams(Map<String, Double> numericParams) {
    this.numericParams = numericParams;
    return this;
  }

  public FlowEntry putNumericParamsItem(String key, Double numericParamsItem) {
    if (this.numericParams == null) {
      this.numericParams = new HashMap<>();
    }
    this.numericParams.put(key, numericParamsItem);
    return this;
  }

   /**
   * Get numericParams
   * @return numericParams
  **/
  @ApiModelProperty(value = "")
  public Map<String, Double> getNumericParams() {
    return numericParams;
  }

  public void setNumericParams(Map<String, Double> numericParams) {
    this.numericParams = numericParams;
  }

  public FlowEntry originalEventTimestamp(Long originalEventTimestamp) {
    this.originalEventTimestamp = originalEventTimestamp;
    return this;
  }

   /**
   * Get originalEventTimestamp
   * @return originalEventTimestamp
  **/
  @ApiModelProperty(value = "")
  public Long getOriginalEventTimestamp() {
    return originalEventTimestamp;
  }

  public void setOriginalEventTimestamp(Long originalEventTimestamp) {
    this.originalEventTimestamp = originalEventTimestamp;
  }

  public FlowEntry params(Map<String, String> params) {
    this.params = params;
    return this;
  }

  public FlowEntry putParamsItem(String key, String paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getParams() {
    return params;
  }

  public void setParams(Map<String, String> params) {
    this.params = params;
  }

  public FlowEntry protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @ApiModelProperty(value = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public FlowEntry sourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
    return this;
  }

   /**
   * Get sourceIp
   * @return sourceIp
  **/
  @ApiModelProperty(value = "")
  public String getSourceIp() {
    return sourceIp;
  }

  public void setSourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
  }

  public FlowEntry sourcePort(Integer sourcePort) {
    this.sourcePort = sourcePort;
    return this;
  }

   /**
   * Get sourcePort
   * @return sourcePort
  **/
  @ApiModelProperty(value = "")
  public Integer getSourcePort() {
    return sourcePort;
  }

  public void setSourcePort(Integer sourcePort) {
    this.sourcePort = sourcePort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowEntry flowEntry = (FlowEntry) o;
    return Objects.equals(this.destinationIp, flowEntry.destinationIp) &&
        Objects.equals(this.destinationPort, flowEntry.destinationPort) &&
        Objects.equals(this.flowType, flowEntry.flowType) &&
        Objects.equals(this.numericParams, flowEntry.numericParams) &&
        Objects.equals(this.originalEventTimestamp, flowEntry.originalEventTimestamp) &&
        Objects.equals(this.params, flowEntry.params) &&
        Objects.equals(this.protocol, flowEntry.protocol) &&
        Objects.equals(this.sourceIp, flowEntry.sourceIp) &&
        Objects.equals(this.sourcePort, flowEntry.sourcePort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationIp, destinationPort, flowType, numericParams, originalEventTimestamp, params, protocol, sourceIp, sourcePort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowEntry {\n");
    
    sb.append("    destinationIp: ").append(toIndentedString(destinationIp)).append("\n");
    sb.append("    destinationPort: ").append(toIndentedString(destinationPort)).append("\n");
    sb.append("    flowType: ").append(toIndentedString(flowType)).append("\n");
    sb.append("    numericParams: ").append(toIndentedString(numericParams)).append("\n");
    sb.append("    originalEventTimestamp: ").append(toIndentedString(originalEventTimestamp)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    sourceIp: ").append(toIndentedString(sourceIp)).append("\n");
    sb.append("    sourcePort: ").append(toIndentedString(sourcePort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

