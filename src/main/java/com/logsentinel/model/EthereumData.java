/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * EthereumData
 */

public class EthereumData {
  @JsonProperty("applicationId")
  private UUID applicationId = null;

  @JsonProperty("blockHash")
  private String blockHash = null;

  @JsonProperty("blockNumber")
  private Long blockNumber = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("hash")
  private String hash = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("input")
  private String input = null;

  @JsonProperty("localHash")
  private String localHash = null;

  @JsonProperty("transactionIndex")
  private Long transactionIndex = null;

  @JsonProperty("txFrom")
  private String txFrom = null;

  @JsonProperty("txTo")
  private String txTo = null;

  public EthereumData applicationId(UUID applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @ApiModelProperty(value = "")
  public UUID getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(UUID applicationId) {
    this.applicationId = applicationId;
  }

  public EthereumData blockHash(String blockHash) {
    this.blockHash = blockHash;
    return this;
  }

   /**
   * Get blockHash
   * @return blockHash
  **/
  @ApiModelProperty(value = "")
  public String getBlockHash() {
    return blockHash;
  }

  public void setBlockHash(String blockHash) {
    this.blockHash = blockHash;
  }

  public EthereumData blockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Get blockNumber
   * @return blockNumber
  **/
  @ApiModelProperty(value = "")
  public Long getBlockNumber() {
    return blockNumber;
  }

  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  public EthereumData created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public EthereumData hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @ApiModelProperty(value = "")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public EthereumData id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public EthereumData input(String input) {
    this.input = input;
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @ApiModelProperty(value = "")
  public String getInput() {
    return input;
  }

  public void setInput(String input) {
    this.input = input;
  }

  public EthereumData localHash(String localHash) {
    this.localHash = localHash;
    return this;
  }

   /**
   * Get localHash
   * @return localHash
  **/
  @ApiModelProperty(value = "")
  public String getLocalHash() {
    return localHash;
  }

  public void setLocalHash(String localHash) {
    this.localHash = localHash;
  }

  public EthereumData transactionIndex(Long transactionIndex) {
    this.transactionIndex = transactionIndex;
    return this;
  }

   /**
   * Get transactionIndex
   * @return transactionIndex
  **/
  @ApiModelProperty(value = "")
  public Long getTransactionIndex() {
    return transactionIndex;
  }

  public void setTransactionIndex(Long transactionIndex) {
    this.transactionIndex = transactionIndex;
  }

  public EthereumData txFrom(String txFrom) {
    this.txFrom = txFrom;
    return this;
  }

   /**
   * Get txFrom
   * @return txFrom
  **/
  @ApiModelProperty(value = "")
  public String getTxFrom() {
    return txFrom;
  }

  public void setTxFrom(String txFrom) {
    this.txFrom = txFrom;
  }

  public EthereumData txTo(String txTo) {
    this.txTo = txTo;
    return this;
  }

   /**
   * Get txTo
   * @return txTo
  **/
  @ApiModelProperty(value = "")
  public String getTxTo() {
    return txTo;
  }

  public void setTxTo(String txTo) {
    this.txTo = txTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EthereumData ethereumData = (EthereumData) o;
    return Objects.equals(this.applicationId, ethereumData.applicationId) &&
        Objects.equals(this.blockHash, ethereumData.blockHash) &&
        Objects.equals(this.blockNumber, ethereumData.blockNumber) &&
        Objects.equals(this.created, ethereumData.created) &&
        Objects.equals(this.hash, ethereumData.hash) &&
        Objects.equals(this.id, ethereumData.id) &&
        Objects.equals(this.input, ethereumData.input) &&
        Objects.equals(this.localHash, ethereumData.localHash) &&
        Objects.equals(this.transactionIndex, ethereumData.transactionIndex) &&
        Objects.equals(this.txFrom, ethereumData.txFrom) &&
        Objects.equals(this.txTo, ethereumData.txTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, blockHash, blockNumber, created, hash, id, input, localHash, transactionIndex, txFrom, txTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EthereumData {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    blockHash: ").append(toIndentedString(blockHash)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    localHash: ").append(toIndentedString(localHash)).append("\n");
    sb.append("    transactionIndex: ").append(toIndentedString(transactionIndex)).append("\n");
    sb.append("    txFrom: ").append(toIndentedString(txFrom)).append("\n");
    sb.append("    txTo: ").append(toIndentedString(txTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

