/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.logsentinel.model.KubernetesLogObjectRef;
import com.logsentinel.model.KubernetesLogResponseStatus;
import com.logsentinel.model.KubernetesLogUser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * KubernetesLogEvent
 */

public class KubernetesLogEvent {
  @JsonProperty("annotations")
  private Map<String, String> annotations = null;

  @JsonProperty("auditID")
  private UUID auditID = null;

  @JsonProperty("impersonatedUser")
  private KubernetesLogUser impersonatedUser = null;

  /**
   * Gets or Sets level
   */
  public enum LevelEnum {
    NONE("None"),
    
    METADATA("Metadata"),
    
    REQUEST("Request"),
    
    REQUESTRESPONSE("RequestResponse");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LevelEnum fromValue(String text) {
      for (LevelEnum b : LevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("level")
  private LevelEnum level = null;

  @JsonProperty("objectRef")
  private KubernetesLogObjectRef objectRef = null;

  @JsonProperty("requestObject")
  private String requestObject = null;

  @JsonProperty("requestReceivedTimestamp")
  private OffsetDateTime requestReceivedTimestamp = null;

  @JsonProperty("requestURI")
  private String requestURI = null;

  @JsonProperty("responseObject")
  private String responseObject = null;

  @JsonProperty("responseStatus")
  private KubernetesLogResponseStatus responseStatus = null;

  @JsonProperty("sourceIPs")
  private List<String> sourceIPs = null;

  @JsonProperty("stage")
  private String stage = null;

  @JsonProperty("stateTimestamp")
  private OffsetDateTime stateTimestamp = null;

  @JsonProperty("user")
  private KubernetesLogUser user = null;

  @JsonProperty("userAgent")
  private String userAgent = null;

  @JsonProperty("verb")
  private String verb = null;

  public KubernetesLogEvent annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public KubernetesLogEvent putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }

  public KubernetesLogEvent auditID(UUID auditID) {
    this.auditID = auditID;
    return this;
  }

   /**
   * Get auditID
   * @return auditID
  **/
  @ApiModelProperty(value = "")
  public UUID getAuditID() {
    return auditID;
  }

  public void setAuditID(UUID auditID) {
    this.auditID = auditID;
  }

  public KubernetesLogEvent impersonatedUser(KubernetesLogUser impersonatedUser) {
    this.impersonatedUser = impersonatedUser;
    return this;
  }

   /**
   * Get impersonatedUser
   * @return impersonatedUser
  **/
  @ApiModelProperty(value = "")
  public KubernetesLogUser getImpersonatedUser() {
    return impersonatedUser;
  }

  public void setImpersonatedUser(KubernetesLogUser impersonatedUser) {
    this.impersonatedUser = impersonatedUser;
  }

  public KubernetesLogEvent level(LevelEnum level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @ApiModelProperty(value = "")
  public LevelEnum getLevel() {
    return level;
  }

  public void setLevel(LevelEnum level) {
    this.level = level;
  }

  public KubernetesLogEvent objectRef(KubernetesLogObjectRef objectRef) {
    this.objectRef = objectRef;
    return this;
  }

   /**
   * Get objectRef
   * @return objectRef
  **/
  @ApiModelProperty(value = "")
  public KubernetesLogObjectRef getObjectRef() {
    return objectRef;
  }

  public void setObjectRef(KubernetesLogObjectRef objectRef) {
    this.objectRef = objectRef;
  }

  public KubernetesLogEvent requestObject(String requestObject) {
    this.requestObject = requestObject;
    return this;
  }

   /**
   * Get requestObject
   * @return requestObject
  **/
  @ApiModelProperty(value = "")
  public String getRequestObject() {
    return requestObject;
  }

  public void setRequestObject(String requestObject) {
    this.requestObject = requestObject;
  }

  public KubernetesLogEvent requestReceivedTimestamp(OffsetDateTime requestReceivedTimestamp) {
    this.requestReceivedTimestamp = requestReceivedTimestamp;
    return this;
  }

   /**
   * Get requestReceivedTimestamp
   * @return requestReceivedTimestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestReceivedTimestamp() {
    return requestReceivedTimestamp;
  }

  public void setRequestReceivedTimestamp(OffsetDateTime requestReceivedTimestamp) {
    this.requestReceivedTimestamp = requestReceivedTimestamp;
  }

  public KubernetesLogEvent requestURI(String requestURI) {
    this.requestURI = requestURI;
    return this;
  }

   /**
   * Get requestURI
   * @return requestURI
  **/
  @ApiModelProperty(value = "")
  public String getRequestURI() {
    return requestURI;
  }

  public void setRequestURI(String requestURI) {
    this.requestURI = requestURI;
  }

  public KubernetesLogEvent responseObject(String responseObject) {
    this.responseObject = responseObject;
    return this;
  }

   /**
   * Get responseObject
   * @return responseObject
  **/
  @ApiModelProperty(value = "")
  public String getResponseObject() {
    return responseObject;
  }

  public void setResponseObject(String responseObject) {
    this.responseObject = responseObject;
  }

  public KubernetesLogEvent responseStatus(KubernetesLogResponseStatus responseStatus) {
    this.responseStatus = responseStatus;
    return this;
  }

   /**
   * Get responseStatus
   * @return responseStatus
  **/
  @ApiModelProperty(value = "")
  public KubernetesLogResponseStatus getResponseStatus() {
    return responseStatus;
  }

  public void setResponseStatus(KubernetesLogResponseStatus responseStatus) {
    this.responseStatus = responseStatus;
  }

  public KubernetesLogEvent sourceIPs(List<String> sourceIPs) {
    this.sourceIPs = sourceIPs;
    return this;
  }

  public KubernetesLogEvent addSourceIPsItem(String sourceIPsItem) {
    if (this.sourceIPs == null) {
      this.sourceIPs = new ArrayList<>();
    }
    this.sourceIPs.add(sourceIPsItem);
    return this;
  }

   /**
   * Get sourceIPs
   * @return sourceIPs
  **/
  @ApiModelProperty(value = "")
  public List<String> getSourceIPs() {
    return sourceIPs;
  }

  public void setSourceIPs(List<String> sourceIPs) {
    this.sourceIPs = sourceIPs;
  }

  public KubernetesLogEvent stage(String stage) {
    this.stage = stage;
    return this;
  }

   /**
   * Get stage
   * @return stage
  **/
  @ApiModelProperty(value = "")
  public String getStage() {
    return stage;
  }

  public void setStage(String stage) {
    this.stage = stage;
  }

  public KubernetesLogEvent stateTimestamp(OffsetDateTime stateTimestamp) {
    this.stateTimestamp = stateTimestamp;
    return this;
  }

   /**
   * Get stateTimestamp
   * @return stateTimestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStateTimestamp() {
    return stateTimestamp;
  }

  public void setStateTimestamp(OffsetDateTime stateTimestamp) {
    this.stateTimestamp = stateTimestamp;
  }

  public KubernetesLogEvent user(KubernetesLogUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public KubernetesLogUser getUser() {
    return user;
  }

  public void setUser(KubernetesLogUser user) {
    this.user = user;
  }

  public KubernetesLogEvent userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @ApiModelProperty(value = "")
  public String getUserAgent() {
    return userAgent;
  }

  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }

  public KubernetesLogEvent verb(String verb) {
    this.verb = verb;
    return this;
  }

   /**
   * Get verb
   * @return verb
  **/
  @ApiModelProperty(value = "")
  public String getVerb() {
    return verb;
  }

  public void setVerb(String verb) {
    this.verb = verb;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubernetesLogEvent kubernetesLogEvent = (KubernetesLogEvent) o;
    return Objects.equals(this.annotations, kubernetesLogEvent.annotations) &&
        Objects.equals(this.auditID, kubernetesLogEvent.auditID) &&
        Objects.equals(this.impersonatedUser, kubernetesLogEvent.impersonatedUser) &&
        Objects.equals(this.level, kubernetesLogEvent.level) &&
        Objects.equals(this.objectRef, kubernetesLogEvent.objectRef) &&
        Objects.equals(this.requestObject, kubernetesLogEvent.requestObject) &&
        Objects.equals(this.requestReceivedTimestamp, kubernetesLogEvent.requestReceivedTimestamp) &&
        Objects.equals(this.requestURI, kubernetesLogEvent.requestURI) &&
        Objects.equals(this.responseObject, kubernetesLogEvent.responseObject) &&
        Objects.equals(this.responseStatus, kubernetesLogEvent.responseStatus) &&
        Objects.equals(this.sourceIPs, kubernetesLogEvent.sourceIPs) &&
        Objects.equals(this.stage, kubernetesLogEvent.stage) &&
        Objects.equals(this.stateTimestamp, kubernetesLogEvent.stateTimestamp) &&
        Objects.equals(this.user, kubernetesLogEvent.user) &&
        Objects.equals(this.userAgent, kubernetesLogEvent.userAgent) &&
        Objects.equals(this.verb, kubernetesLogEvent.verb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, auditID, impersonatedUser, level, objectRef, requestObject, requestReceivedTimestamp, requestURI, responseObject, responseStatus, sourceIPs, stage, stateTimestamp, user, userAgent, verb);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubernetesLogEvent {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    auditID: ").append(toIndentedString(auditID)).append("\n");
    sb.append("    impersonatedUser: ").append(toIndentedString(impersonatedUser)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    objectRef: ").append(toIndentedString(objectRef)).append("\n");
    sb.append("    requestObject: ").append(toIndentedString(requestObject)).append("\n");
    sb.append("    requestReceivedTimestamp: ").append(toIndentedString(requestReceivedTimestamp)).append("\n");
    sb.append("    requestURI: ").append(toIndentedString(requestURI)).append("\n");
    sb.append("    responseObject: ").append(toIndentedString(responseObject)).append("\n");
    sb.append("    responseStatus: ").append(toIndentedString(responseStatus)).append("\n");
    sb.append("    sourceIPs: ").append(toIndentedString(sourceIPs)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    stateTimestamp: ").append(toIndentedString(stateTimestamp)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    verb: ").append(toIndentedString(verb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

